{"version":3,"file":"index.cjs.js","sources":["../src/api/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as firebase from 'firebase';\nimport { _FirebaseApp } from '@firebase/app-types/private';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\nimport * as request from 'request';\nimport { base64 } from '@firebase/util';\nimport { setLogLevel, LogLevel } from '@firebase/logger';\nimport { Component, ComponentType } from '@firebase/component';\n\nexport { database, firestore } from 'firebase';\n\n/** If this environment variable is set, use it for the database emulator's address. */\nconst DATABASE_ADDRESS_ENV: string = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/** The default address for the local database emulator. */\nconst DATABASE_ADDRESS_DEFAULT: string = 'localhost:9000';\n\n/** If any of environment variable is set, use it for the Firestore emulator. */\nconst FIRESTORE_ADDRESS_ENV: string = 'FIRESTORE_EMULATOR_HOST';\n/** The default address for the local Firestore emulator. */\nconst FIRESTORE_ADDRESS_DEFAULT: string = 'localhost:8080';\n\n/** The actual address for the database emulator */\nlet _databaseHost: string | undefined = undefined;\n\n/** The actual address for the Firestore emulator */\nlet _firestoreHost: string | undefined = undefined;\n\nexport type Provider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\nexport type FirebaseIdToken = {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique id\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique id, must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: Provider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in Provider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: any;\n};\n\n// To avoid a breaking change, we accept the 'uid' option here, but\n// new users should prefer 'sub' instead.\nexport type TokenOptions = Partial<FirebaseIdToken> & { uid?: string };\n\nfunction createUnsecuredJwt(token: TokenOptions, projectId?: string): string {\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    kid: 'fakekid',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'fake-project';\n  const iat = token.iat || 0;\n  const uid = token.sub || token.uid || token.user_id;\n  if (!uid) {\n    throw new Error(\"Auth must contain 'sub', 'uid', or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat: iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub: uid,\n    user_id: uid,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Remove the uid option since it's not actually part of the token spec.\n  if (payload.uid) {\n    delete payload.uid;\n  }\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64.encodeString(JSON.stringify(header), /*webSafe=*/ false),\n    base64.encodeString(JSON.stringify(payload), /*webSafe=*/ false),\n    signature\n  ].join('.');\n}\n\nexport function apps(): firebase.app.App[] {\n  return firebase.apps;\n}\n\nexport type AppOptions = {\n  databaseName?: string;\n  projectId?: string;\n  auth?: TokenOptions;\n};\n/** Construct an App authenticated with options.auth. */\nexport function initializeTestApp(options: AppOptions): firebase.app.App {\n  const jwt = options.auth\n    ? createUnsecuredJwt(options.auth, options.projectId)\n    : undefined;\n\n  return initializeApp(jwt, options.databaseName, options.projectId);\n}\n\nexport type AdminAppOptions = {\n  databaseName?: string;\n  projectId?: string;\n};\n/** Construct an App authenticated as an admin user. */\nexport function initializeAdminApp(options: AdminAppOptions): firebase.app.App {\n  const admin = require('firebase-admin');\n\n  const app = admin.initializeApp(\n    getAppOptions(options.databaseName, options.projectId),\n    getRandomAppName()\n  );\n\n  if (options.projectId) {\n    app.firestore().settings({\n      host: getFirestoreHost(),\n      ssl: false\n    });\n  }\n\n  return app;\n}\n\nfunction getDatabaseHost() {\n  if (!_databaseHost) {\n    const fromEnv = process.env[DATABASE_ADDRESS_ENV];\n    if (fromEnv) {\n      _databaseHost = fromEnv;\n    } else {\n      console.warn(\n        `Warning: ${DATABASE_ADDRESS_ENV} not set, using default value ${DATABASE_ADDRESS_DEFAULT}`\n      );\n      _databaseHost = DATABASE_ADDRESS_DEFAULT;\n    }\n  }\n\n  return _databaseHost;\n}\n\nfunction getFirestoreHost() {\n  if (!_firestoreHost) {\n    const fromEnv = process.env[FIRESTORE_ADDRESS_ENV];\n    if (fromEnv) {\n      _firestoreHost = fromEnv;\n    } else {\n      console.warn(\n        `Warning: ${FIRESTORE_ADDRESS_ENV} not set, using default value ${FIRESTORE_ADDRESS_DEFAULT}`\n      );\n      _firestoreHost = FIRESTORE_ADDRESS_DEFAULT;\n    }\n  }\n\n  return _firestoreHost;\n}\n\nfunction getRandomAppName(): string {\n  return 'app-' + new Date().getTime() + '-' + Math.random();\n}\n\nfunction getAppOptions(\n  databaseName?: string,\n  projectId?: string\n): { [key: string]: string } {\n  let appOptions: { [key: string]: string } = {};\n\n  if (databaseName) {\n    appOptions[\n      'databaseURL'\n    ] = `http://${getDatabaseHost()}?ns=${databaseName}`;\n  }\n  if (projectId) {\n    appOptions['projectId'] = projectId;\n  }\n\n  return appOptions;\n}\n\nfunction initializeApp(\n  accessToken?: string,\n  databaseName?: string,\n  projectId?: string\n): firebase.app.App {\n  const appOptions = getAppOptions(databaseName, projectId);\n  const app = firebase.initializeApp(appOptions, getRandomAppName());\n  if (accessToken) {\n    const mockAuthComponent = new Component(\n      'auth-internal',\n      () =>\n        ({\n          getToken: async () => ({ accessToken: accessToken }),\n          getUid: () => null,\n          addAuthTokenListener: listener => {\n            // Call listener once immediately with predefined accessToken.\n            listener(accessToken);\n          },\n          removeAuthTokenListener: () => {}\n        } as FirebaseAuthInternal),\n      ComponentType.PRIVATE\n    );\n\n    ((app as unknown) as _FirebaseApp)._addOrOverwriteComponent(\n      mockAuthComponent\n    );\n  }\n  if (databaseName) {\n    // Toggle network connectivity to force a reauthentication attempt.\n    // This mitigates a minor race condition where the client can send the\n    // first database request before authenticating.\n    app.database().goOffline();\n    app.database().goOnline();\n  }\n  if (projectId) {\n    app.firestore().settings({\n      host: getFirestoreHost(),\n      ssl: false\n    });\n  }\n  /**\n  Mute warnings for the previously-created database and whatever other\n  objects were just created.\n */\n  setLogLevel(LogLevel.ERROR);\n  return app;\n}\n\nexport type LoadDatabaseRulesOptions = {\n  databaseName: string;\n  rules: string;\n};\nexport function loadDatabaseRules(\n  options: LoadDatabaseRulesOptions\n): Promise<void> {\n  if (!options.databaseName) {\n    throw Error('databaseName not specified');\n  }\n\n  if (!options.rules) {\n    throw Error('must provide rules to loadDatabaseRules');\n  }\n\n  return new Promise((resolve, reject) => {\n    request.put(\n      {\n        uri: `http://${getDatabaseHost()}/.settings/rules.json?ns=${\n          options.databaseName\n        }`,\n        headers: { Authorization: 'Bearer owner' },\n        body: options.rules\n      },\n      (err, resp, body) => {\n        if (err) {\n          reject(err);\n        } else if (resp.statusCode !== 200) {\n          reject(JSON.parse(body).error);\n        } else {\n          resolve();\n        }\n      }\n    );\n  });\n}\n\nexport type LoadFirestoreRulesOptions = {\n  projectId: string;\n  rules: string;\n};\nexport function loadFirestoreRules(\n  options: LoadFirestoreRulesOptions\n): Promise<void> {\n  if (!options.projectId) {\n    throw new Error('projectId not specified');\n  }\n\n  if (!options.rules) {\n    throw new Error('must provide rules to loadFirestoreRules');\n  }\n\n  return new Promise((resolve, reject) => {\n    request.put(\n      {\n        uri: `http://${getFirestoreHost()}/emulator/v1/projects/${\n          options.projectId\n        }:securityRules`,\n        body: JSON.stringify({\n          rules: {\n            files: [{ content: options.rules }]\n          }\n        })\n      },\n      (err, resp, body) => {\n        if (err) {\n          reject(err);\n        } else if (resp.statusCode !== 200) {\n          console.log('body', body);\n          reject(JSON.parse(body).error);\n        } else {\n          resolve();\n        }\n      }\n    );\n  });\n}\n\nexport type ClearFirestoreDataOptions = {\n  projectId: string;\n};\nexport function clearFirestoreData(\n  options: ClearFirestoreDataOptions\n): Promise<void> {\n  if (!options.projectId) {\n    throw new Error('projectId not specified');\n  }\n\n  return new Promise((resolve, reject) => {\n    request.delete(\n      {\n        uri: `http://${getFirestoreHost()}/emulator/v1/projects/${\n          options.projectId\n        }/databases/(default)/documents`,\n        body: JSON.stringify({\n          database: `projects/${options.projectId}/databases/(default)`\n        })\n      },\n      (err, resp, body) => {\n        if (err) {\n          reject(err);\n        } else if (resp.statusCode !== 200) {\n          console.log('body', body);\n          reject(JSON.parse(body).error);\n        } else {\n          resolve();\n        }\n      }\n    );\n  });\n}\n\nexport function assertFails(pr: Promise<any>): any {\n  return pr.then(\n    (v: any) => {\n      return Promise.reject(\n        new Error('Expected request to fail, but it succeeded.')\n      );\n    },\n    (err: any) => {\n      const isPermissionDenied =\n        (err && err.message && err.message.indexOf('PERMISSION_DENIED') >= 0) ||\n        (err && err.code === 'permission-denied');\n      if (!isPermissionDenied) {\n        return Promise.reject(\n          new Error(\n            `Expected PERMISSION_DENIED but got unexpected error: ${err}`\n          )\n        );\n      }\n      return err;\n    }\n  );\n}\n\nexport function assertSucceeds(pr: Promise<any>): any {\n  return pr;\n}\n"],"names":["base64","firebase.apps","firebase.initializeApp","Component","setLogLevel","LogLevel","request.put","request.delete"],"mappings":"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"}